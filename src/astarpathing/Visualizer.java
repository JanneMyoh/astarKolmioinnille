/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package astarpathing;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.ArrayList;
import java.util.Random;
import javax.swing.JPanel;

/**
 * Luokka jolla esitetään kappale ja polku siinä
 * @author janne
 */
public class Visualizer extends javax.swing.JFrame {

    /**
     * Creates new form Visualizer
     */
    
    Graph grp;
    ArrayList<Kolmio> reitti = null;
    
    /**
     *
     * @param gr
     */
    public Visualizer(Graph gr) {
        initComponents();
        grp = gr;
        //luodaan reitti, sattuman varaisten kolmioiden välillä
        Random rand = new Random();
        Kolmio alku = grp.kolmiot.get(rand.nextInt(grp.kolmiot.size()));
        Kolmio maali = grp.kolmiot.get(rand.nextInt(grp.kolmiot.size()));
        while(alku == maali) maali = grp.kolmiot.get(rand.nextInt(grp.kolmiot.size()));
        reitti = grp.getPath(alku, maali);
        JPanel pnl = new JPanel(){
           @Override
           public void paintComponent(Graphics g) {
                super.paintComponent(g);
                draw(g,this.getWidth(),this.getHeight());
                
            } 
            
        };
        this.add(pnl);
        

    }
    
    private void draw(Graphics g, int wid, int hei)
    {
        //skaalataan pisteet niin että maksimi ja minimi ovat melkein reunoilla
        //float kerroin = Math.min(wid/(maxx-minx),hei/(maxy-miny))*0.9f;
        //float kerroin = wid/(maxx-minx);
        //System.out.println("Scale kerroin: " + kerroin + " wid: " + wid + " hei: " + hei);
        //shiftataan kaikki pisteet niin että panelin keskikohta on origo
        int ox = wid/2;
        int oy = hei/2;
        for(Kolmio k: grp.kolmiot)
        {
            drawTriangle(g, k, ox, oy);
        }
        //merkitään alku kolmio
        g.setColor(Color.red);
        drawTriangle(g, reitti.get(0), ox, oy);
        g.drawOval(Math.round(reitti.get(0).cog[0])*10 + ox, Math.round(reitti.get(0).cog[1])*10 + oy, 3, 3);
        g.setColor(Color.green);
        drawTriangle(g, reitti.get(reitti.size()-1), ox, oy);
        g.drawOval(Math.round(reitti.get(reitti.size()-1).cog[0])*10 + ox, Math.round(reitti.get(reitti.size()-1).cog[1])*10 + oy, 3, 3);
        g.setColor(Color.blue);
        //piirretään reitti
        for(int i = 0; i < reitti.size()-1; i++)
        {
            g.drawLine(Math.round(reitti.get(i).cog[0]*10+ox),Math.round(reitti.get(i).cog[1]*10+oy), Math.round(reitti.get(i+1).cog[0]*10+ox),Math.round(reitti.get(i+1).cog[1]*10+oy));
        }
        //piirretään reitin pisteet
        for(int i = 1; i < reitti.size()-1; i++)
        {
            g.drawOval(Math.round(reitti.get(i).cog[0]*10 + ox), Math.round(reitti.get(i).cog[1]*10 + oy), 3, 3);
        }
        
    }
    
    /**
     *
     * @param g
     * @param k
     * @param ox
     * @param oy
     */
    public void drawTriangle(Graphics g, Kolmio k, int ox, int oy)
    {
        float[][] pisteet = k.getPisteet();
            g.drawLine(Math.round(pisteet[0][0]*10+ox),Math.round(pisteet[0][1]*10+oy), Math.round(pisteet[1][0]*10+ox),Math.round(pisteet[1][1]*10+oy));
            g.drawLine(Math.round(pisteet[1][0]*10+ox),Math.round(pisteet[1][1]*10+oy), Math.round(pisteet[2][0]*10+ox),Math.round(pisteet[2][1]*10+oy));
            g.drawLine(Math.round(pisteet[2][0]*10+ox),Math.round(pisteet[2][1]*10+oy), Math.round(pisteet[0][0]*10+ox),Math.round(pisteet[0][1]*10+oy));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridLayout());

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Visualizer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Visualizer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Visualizer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Visualizer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                System.out.println("Ollaan visualizerin mainissa... huono juttu?");
                new Visualizer(null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
